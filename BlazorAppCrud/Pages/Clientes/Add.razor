@page "/altacliente"
@using BlazorAppCrud.Helpers
@using BlazorAppCrud.Models
@using BlazorAppCrud.Services

@inject IAlertService AlertService
@inject IClienteService clienteService
@inject NavigationManager NavigationManager

<h1>Alta Cliente</h1>
<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-row">
        <div class="form-group col">
            <label>Nombre</label>
            <InputText @bind-Value="model.nombre" class="form-control" />
            <ValidationMessage For="@(() => model.nombre)" />
        </div>
        <div class="form-group col">
            <label>Edad</label>
            <input type="number" @bind="model.edad" class="form-control" maxlength="3" />
            <ValidationMessage For="@(() => model.edad)" />
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col">
            <label>Email</label>
            <input type="email" @bind="model.email" class="form-control" />
            <ValidationMessage For="@(() => model.email)" />
        </div>
       
       
    </div>
    <div class="form-group">
        <button disabled="@loading" class="btn btn-primary">
            @if (loading)
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            Aceptar
        </button>
        <NavLink href="customers" class="btn btn-link">Cancelar</NavLink>
    </div>
</EditForm>

@code {
    private AddCliente model = new AddCliente();
    private bool loading;

    private async void OnValidSubmit()
    {
        loading = true;
        try
        {
            await clienteService.Register(model);
            AlertService.Success("Alta exitosa", keepAfterRouteChange: true);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            AlertService.Error(ex.Message);
            loading = false;
            StateHasChanged();
        }
    }
}